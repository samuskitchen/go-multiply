// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MultiplyCommand is an autogenerated mock type for the MultiplyCommand type
type MultiplyCommand struct {
	mock.Mock
}

// MultiplyNumbers provides a mock function with given fields: numbers
func (_m *MultiplyCommand) MultiplyNumbers(numbers ...float64) float64 {
	_va := make([]interface{}, len(numbers))
	for _i := range numbers {
		_va[_i] = numbers[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 float64
	if rf, ok := ret.Get(0).(func(...float64) float64); ok {
		r0 = rf(numbers...)
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}
